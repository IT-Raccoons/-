Через DFS:
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
using namespace std;

vector <vector<int>> matrix;
int sizeY, sizeX, tmpcolor, color, global_count = 0;

void fill(int x, int y)
{
	if (x >= 0 && x <= sizeY - 1 && y >= 0 && y <= sizeX - 1)
	{
		if (matrix[x][y] == tmpcolor)
		{
			matrix[x][y] = color;
			global_count++;
			fill(x - 1, y);
			fill(x + 1, y);
			fill(x, y + 1);
			fill(x, y - 1);
		}
	}
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int startX, startY;
	cin >> sizeY >> sizeX >> startX >> startY >> color;
	matrix.resize(sizeY, vector<int>(sizeX));
	for (int i = 0; i < sizeY; i++)
	for (int j = 0; j < sizeX; j++)
		cin >> matrix[i][j];
	cout << endl;
	tmpcolor = matrix[startY][startX];
	if (tmpcolor != color)
	{
		fill(startY, startX);
		cout << global_count << endl;
	}
	else
		cout << 0 << endl;
	for (int i = 0; i < sizeY; i++)
	{
		for (int j = 0; j < sizeX; j++)
			cout << matrix[i][j] << " ";
		cout << endl;
	}
	return 0;
}

Через BFS:
