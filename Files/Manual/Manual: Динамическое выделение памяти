Для единственной переменной:
1 способ. int* p = new int;
2 способ. int* p = (int*)malloc(кол-во байт/sizeof(тип переменной));

Для массивов:
1 способ. int* p = new int[константа или переменная];
2 способ. int* p = (int*)malloc(sizeof(тип переменной)*кол-во ячеек)
3 способ. int* p = (int*)calloc(кол-во ячеек, sizeof(тип переменной)); - лучше, чем malloc т.к обнуляет выбранные ячейки.
4 способ. int* p = (int*)realloc(переменная в которую выделили память или само p, новое необходимое кол-во ячеек*sizeof(тип переменной);

Для двумерных (трехмерных и тд) массивов:
1 способ. тип **название матрицы = new тип*[размер матрицы];
	        for (int i = 0; i < размер матрицы; i++) {
		        название матрицы[i] = new тип[размер матрицы];
	        }

Удаление динамической памяти:
1 способ. free(p);
2 способ. delete[]p2;

Смещение указателя:
*(p+1) == p[1]
